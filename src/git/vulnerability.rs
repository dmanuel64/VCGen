use std::path::PathBuf;

use crate::vulnerability::analyzer::StaticAnalyzer;
use git2::Repository;
use tempfile::{tempdir, TempDir};

pub struct VulnerableCommits {
    repo_url: String,
    pub repo_dir: TempDir,
    analyzers: Vec<Box<dyn StaticAnalyzer>>,
}

impl VulnerableCommits {
    pub fn new(repo_url: &str, analyzers: Vec<Box<dyn StaticAnalyzer>>) -> Result<Self, String> {
        let tempdir = tempdir().or_else(|err| Err(err.to_string()))?;
        Repository::clone(repo_url, tempdir.path()).or_else(|err| Err(err.to_string()))?;
        assert!(tempdir.path().exists());
        Ok(Self {
            repo_url: String::from(repo_url),
            repo_dir: tempdir,
            analyzers: analyzers,
        })
    }

    fn vulnerable_commits() {}
}

impl Drop for VulnerableCommits {
    fn drop(&mut self) {
        todo!()
    }
}
